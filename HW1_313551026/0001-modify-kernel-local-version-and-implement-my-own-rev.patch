From 1cf4308f2beddfadba1276cb5b803d8c33c65018 Mon Sep 17 00:00:00 2001
From: 313551026 <za970120604.cs13@nycu.edu.tw>
Date: Sat, 28 Sep 2024 14:03:36 +0800
Subject: [PATCH] modify kernel local version and implement my own revstr
 system call

---
 Makefile                               |  2 +-
 arch/x86/entry/syscalls/syscall_64.tbl |  2 +-
 include/linux/syscalls.h               |  1 +
 revstr/Makefile                        |  1 +
 revstr/revstr.c                        | 39 ++++++++++++++++++++++++++
 5 files changed, 43 insertions(+), 2 deletions(-)
 create mode 100644 revstr/Makefile
 create mode 100644 revstr/revstr.c

diff --git a/Makefile b/Makefile
index 997b67722..355e53fd6 100644
--- a/Makefile
+++ b/Makefile
@@ -743,7 +743,7 @@ endif

 ifeq ($(KBUILD_EXTMOD),)
 # Objects we will link into vmlinux / subdirs we need to visit
-core-y		:=
+core-y		:= revstr/
 drivers-y	:=
 libs-y		:= lib/
 endif # KBUILD_EXTMOD
diff --git a/arch/x86/entry/syscalls/syscall_64.tbl b/arch/x86/entry/syscalls/syscall_64.tbl
index c84d12608..111341f58 100644
--- a/arch/x86/entry/syscalls/syscall_64.tbl
+++ b/arch/x86/entry/syscalls/syscall_64.tbl
@@ -372,7 +372,7 @@
 448	common	process_mrelease	sys_process_mrelease
 449	common	futex_waitv		sys_futex_waitv
 450	common	set_mempolicy_home_node	sys_set_mempolicy_home_node
-
+451     common  revstr                  sys_revstr
 #
 # Due to a historical design error, certain syscalls are numbered differently
 # in x32 as compared to native x86_64.  These syscalls have numbers 512-547.
diff --git a/include/linux/syscalls.h b/include/linux/syscalls.h
index a34b0f9a9..83763c3d2 100644
--- a/include/linux/syscalls.h
+++ b/include/linux/syscalls.h
@@ -1385,4 +1385,5 @@ int __sys_getsockopt(int fd, int level, int optname, char __user *optval,
 		int __user *optlen);
 int __sys_setsockopt(int fd, int level, int optname, char __user *optval,
 		int optlen);
+asmlinkage long sys_revstr(char __user *str, int len);
 #endif
diff --git a/revstr/Makefile b/revstr/Makefile
new file mode 100644
index 000000000..4c0ace2ef
--- /dev/null
+++ b/revstr/Makefile
@@ -0,0 +1 @@
+obj-y := revstr.o
diff --git a/revstr/revstr.c b/revstr/revstr.c
new file mode 100644
index 000000000..77f74f689
--- /dev/null
+++ b/revstr/revstr.c
@@ -0,0 +1,39 @@
+#include <linux/kernel.h>
+#include <linux/syscalls.h>
+#include <linux/uaccess.h>
+#include <linux/slab.h>
+
+SYSCALL_DEFINE2(revstr, char __user *, str, int, len){
+    char *str_buf = kmalloc(len + 1, GFP_KERNEL); // +1 for '\0'
+    if (!str_buf) {
+        return -ENOMEM;
+    }
+
+    if (copy_from_user(str_buf, str, len)) {
+        kfree(str_buf);
+        return -EFAULT;
+    }
+
+    str_buf[len] = '\0';
+
+    printk(KERN_INFO "The original string: %s\n", str_buf);
+
+    char temp;
+    for (int i = 0; i < len / 2; i++) {
+        temp = str_buf[i];
+        str_buf[i] = str_buf[len - i - 1];
+        str_buf[len - i - 1] = temp;
+    }
+
+    printk(KERN_INFO "The reversed string: %s\n", str_buf);
+
+    if (copy_to_user(str, str_buf, len)) {
+        kfree(str_buf);
+        return -EFAULT;
+    }
+
+    kfree(str_buf);
+
+    return 0;
+}
+
--
2.43.0

